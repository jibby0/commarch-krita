* Dig deeper. Provide answers to the following questions:

== I. The project's IRC Channel ==

== II Source Code repository ==

== III. Mail list archive ==

== IV. Documentation ==

== V. Other communication channels ==

== VI. Project Website and/or Blog ==

== A. Describe software project, its purpose and goals. ==

== B. Give brief history of the project. When was the Initial Commit? The latest commit? ==

== C. Who approves patches? How many people? ==
 - Krita developers approve patches on KDE's Phabricator. Anyone who submits 3 patches is eligible for developer status.

== D. Who has commit access, or has had patches accepted? How many total? ==
 - https://phabricator.kde.org/project/members/8/ lists 27 members: however, it's difficult to tell who has any special privileges. It lists woltherav (Wolthera van Hövell) as a Krita Dev/Manual Writer, rather than just a User. However, rempt (Boudewijn Rempt) and dkazakov (Dmitry Kazakov) are both Users, but have the most knowledge of the project, according to Git by a Bus.

== E. Who has the highest amounts of "Unique Knowledge?" (As per your "Git-by-a-bus" report. If there is a tie, list each contributor, with links if possible) ==
 - rempt (Boudewijn Rempt) and dkazakov (Dmitry Kazakov)

== F. What is your project's "Calloway Coefficient of Fail?" ==
 - 20 points. This is because it's a large project, and it uses cmake.

== G. Has there been any turnover in the Core Team? (i.e. has the same top 20% of contributors stayed the same over time? If not, how has it changed?) ==
 - Repo history goes back to 1998. Kazakov started contributing in 2009, Rempt in 2003, and Zander in 2005. The 3 of them make up ~60% of the knowledge in the codebase.

== H. Does the project have a BDFL, or Lead Developer? (BDFL == Benevolent Dictator for Life) If not, what is the structure of its leadership, and how is it chosen? ==
  - I can't find any information on conflict resolution. The KDE Code of Conduct https://kde.org/code-of-conduct/ pushes pragmatism and respect. Ideally, developers respectfully hash it out, and the best idea wins. Anyone who doesn't follow this process is in violation of the CoC.

== I. Are the front and back end developers the same people? What is the proportion of each? ==
  - Krita developers are full stack. As explained on https://krita.org/en/get-involved/developers/, "To work on Krita, you have to use C++ and Qt. It’s a good way to learn both, actually!"

== J. What have been some of the major bugs/problems/issues that have arisen during development? Who is responsible for quality control and bug repair? ==
  - Searching on https://bugs.kde.org with "product:krita severity:critical"  only produced one big bug, an undo/redo bug that causes data loss: https://bugs.kde.org/show_bug.cgi?id=397836 This was opened last August and confirmed, but so far has not been addressed.

== K. How is the project's participation trending and why? ==

== L. In your opinion, does the project pass "The Raptor Test?" (i.e. Would the project survive if the BDFL, or most active contributor were eaten by a Velociraptor?) Why or why not? ==

== M. In your opinion, would the project survive if the core team, or most active 20% of contributors, were hit by a bus? Why or why not? ==

== N. Does the project have an official "on-boarding" process in place? (new contributor guides, quickstarts, communication leads who focus specifically on newbies, etc...) ==

== O. Does the project have Documentation available? How extensive is it? Does it include code examples? ==

== P. If you were going to contribute to this project, but ran into trouble or hit blockers, who would you contact, and how? ==

== Q. Based on these answers, how would you describe the decision making structure/process of this group? Is it hierarchical, consensus building, ruled by a small group, barely contained chaos, or ruled by a single or pair of individuals? ==

== R. Is this the kind of structure you would enjoy working in? Why, or why not? ==
